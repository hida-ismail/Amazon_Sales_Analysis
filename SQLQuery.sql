
CREATE DATABASE SalesAnalysisDB;
USE SalesAnalysisDB;
select * from Clean_Sales_Data;

-- Count Total Number of Records
SELECT COUNT(*) AS Total_Records 
FROM Clean_Sales_Data;

-- Orders with Highest Profit
SELECT TOP 5 *
FROM Clean_Sales_Data
ORDER BY Total_Profit DESC;


--total profit generated by each region.
CREATE VIEW Region_Profit_View AS
SELECT Region, SUM(Total_Profit) AS Total_Profit
FROM Clean_Sales_Data
GROUP BY Region;

SELECT * FROM Region_Profit_View;

-- total profit by each country.
CREATE VIEW Top_Countries_Profit AS
SELECT Country, SUM(Total_Profit) AS Profit
FROM Clean_Sales_Data
GROUP BY Country;

SELECT * FROM Top_Countries_Profit;

-- Monthly Revenue Trend View
CREATE VIEW Monthly_Revenue_View AS
SELECT 
    FORMAT(Order_Date, 'yyyy-MM') AS Month,
    SUM(Total_Revenue) AS Revenue
FROM Clean_Sales_Data
GROUP BY FORMAT(Order_Date, 'yyyy-MM');

SELECT * FROM Monthly_Revenue_View;

-- Item Types by Profit in Each Region
CREATE VIEW Top_Item_Profit_Per_Region AS
WITH RankedItems AS (
    SELECT 
        Region, Item_Type, SUM(Total_Profit) AS Profit,
        RANK() OVER (PARTITION BY Region ORDER BY SUM(Total_Profit) DESC) AS RankInRegion
    FROM Clean_Sales_Data
    GROUP BY Region, Item_Type
)
SELECT Region, Item_Type, Profit
FROM RankedItems
WHERE RankInRegion <= 3;

SELECT * FROM Top_Item_Profit_Per_Region;

-- High Priority Orders with High Revenue
CREATE VIEW High_Priority_Revenue_View AS
SELECT *
FROM Clean_Sales_Data
WHERE Order_Priority IN ('H', 'High')
  AND Total_Revenue > 100000;

SELECT * FROM High_Priority_Revenue_View;

--Profit Margin by Item Type
CREATE VIEW Profit_Margin_By_Item_View AS
SELECT 
    Item_Type,
    SUM(Total_Revenue) AS Total_Revenue,
    SUM(Total_Profit) AS Total_Profit,
    ROUND(SUM(Total_Profit) * 100.0 / NULLIF(SUM(Total_Revenue), 0), 2) AS Profit_Margin_Percentage
FROM Clean_Sales_Data
GROUP BY Item_Type;

SELECT * FROM Profit_Margin_By_Item_View;

--Average Unit Cost and Price by Region
CREATE VIEW Region_Unit_Price_Cost_View AS
SELECT 
    Region,
    ROUND(AVG(Unit_Price), 2) AS Avg_Unit_Price,
    ROUND(AVG(Unit_Cost), 2) AS Avg_Unit_Cost
FROM Clean_Sales_Data
GROUP BY Region;

SELECT * FROM Region_Unit_Price_Cost_View;

--Average Units Sold per Country
CREATE VIEW View_Avg_Units_Per_Country AS
SELECT Country,
       AVG(Units_Sold) AS Avg_Units_Sold
FROM Clean_Sales_Data
GROUP BY Country;

SELECT * FROM View_Avg_Units_Per_Country;
